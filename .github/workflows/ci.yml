name: CI
on: [pull_request]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache local Yarn repository
        uses: actions/cache@v2
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-yarn-

      - name: Install dependencies and check format
        run: yarn && yarn format:check
        working-directory: ./src/main/app
  test:
    runs-on: ${{matrix.os}}
    strategy:
      max-parallel: 1
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11/13
        uses: actions/setup-java@v1
        with:
          java-version: ${{matrix.jdk}}
          matrix:
            jdk: [11, 13]

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{runner.os}}-maven-${{hashFiles('**/pom.xml')}}
          restore-keys: ${{runner.os}}-maven-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache local Yarn repository
        uses: actions/cache@v2
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-yarn-

      - name: Test with Maven
        # The logger config ensures that dependency downloads are not logged.
        # Reference: https://blogs.itemis.com/en/in-a-nutshell-removing-artifact-messages-from-maven-log-output
        # This is useful as the tests run in fresh containers and, therefore, dependencies are *always* downloaded.
        run: mvn test --batch-mode "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" --f pom.xml
